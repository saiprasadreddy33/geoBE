{"version":3,"sources":["app.js"],"names":["express","require","mongoose","cors","dotenv","markersRouter","shapesRouter","uploadRouter","config","app","port","process","env","PORT","use","json","connect","MONGODB_URI","useNewUrlParser","useUnifiedTopology","then","console","log","listen","error","message","err","req","res","next","stack","status","send","module","exports"],"mappings":";;AAAA;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMI,aAAa,GAAGJ,OAAO,CAAC,kBAAD,CAA7B;;AACA,IAAMK,YAAY,GAAGL,OAAO,CAAC,iBAAD,CAA5B;;AACA,IAAMM,YAAY,GAAGN,OAAO,CAAC,iBAAD,CAA5B;;AAEAG,MAAM,CAACI,MAAP;AACA,IAAMC,GAAG,GAAGT,OAAO,EAAnB;AACA,IAAMU,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC,C,CAEA;;AACAJ,GAAG,CAACK,GAAJ,CAAQX,IAAI,EAAZ;AACAM,GAAG,CAACK,GAAJ,CAAQd,OAAO,CAACe,IAAR,EAAR,E,CAEA;;AACAN,GAAG,CAACK,GAAJ,CAAQ,cAAR,EAAwBT,aAAxB;AACAI,GAAG,CAACK,GAAJ,CAAQ,aAAR,EAAuBR,YAAvB;AACAG,GAAG,CAACK,GAAJ,CAAQ,aAAR,EAAuBP,YAAvB,E,CAEA;;AACAL,QAAQ,CAACc,OAAT,CAAiBL,OAAO,CAACC,GAAR,CAAYK,WAA7B,EAA0C;AACxCC,EAAAA,eAAe,EAAE,IADuB;AAExCC,EAAAA,kBAAkB,EAAE,IAFoB,CAGxC;;AAHwC,CAA1C,EAKCC,IALD,CAKM,YAAM;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EADU,CAGV;;AACAb,EAAAA,GAAG,CAACc,MAAJ,CAAWb,IAAX,EAAiB,YAAM;AACrBW,IAAAA,OAAO,CAACC,GAAR,iDAAqDZ,IAArD;AACD,GAFD;AAGD,CAZD,WAaO,UAACc,KAAD,EAAW;AAChBH,EAAAA,OAAO,CAACG,KAAR,CAAc,8BAAd,EAA8CA,KAAK,CAACC,OAApD;AACD,CAfD,E,CAiBA;;AACAhB,GAAG,CAACK,GAAJ,CAAQ,UAACY,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC/BR,EAAAA,OAAO,CAACG,KAAR,CAAcE,GAAG,CAACI,KAAlB;AACAF,EAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kBAArB;AACD,CAHD;AAKAC,MAAM,CAACC,OAAP,GAAiBzB,GAAjB","sourcesContent":["// server/app.js\r\nconst express = require('express');\r\nconst mongoose = require('mongoose');\r\nconst cors = require('cors');\r\nconst dotenv = require('dotenv');\r\nconst markersRouter = require('./routes/markers');\r\nconst shapesRouter = require('./routes/shapes');\r\nconst uploadRouter = require('./routes/upload');\r\n\r\ndotenv.config();\r\nconst app = express();\r\nconst port = process.env.PORT || 3001;\r\n\r\n// Middleware\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\n// Routes\r\napp.use('/api/markers', markersRouter);\r\napp.use('/api/shapes', shapesRouter);\r\napp.use('/api/upload', uploadRouter);\r\n\r\n// MongoDB Connection\r\nmongoose.connect(process.env.MONGODB_URI, {\r\n  useNewUrlParser: true,\r\n  useUnifiedTopology: true,\r\n  // Remove the useCreateIndex option as it's deprecated\r\n})\r\n.then(() => {\r\n  console.log('Connected to MongoDB');\r\n\r\n  // Start the server\r\n  app.listen(port, () => {\r\n    console.log(`Server is running on http://localhost:${port}`);\r\n  });\r\n})\r\n.catch((error) => {\r\n  console.error('Error connecting to MongoDB:', error.message);\r\n});\r\n\r\n// Error handling middleware\r\napp.use((err, req, res, next) => {\r\n  console.error(err.stack);\r\n  res.status(500).send('Something broke!');\r\n});\r\n\r\nmodule.exports = app;\r\n"],"file":"app.dev.js"}