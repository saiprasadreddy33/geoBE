{"version":3,"sources":["shapeController.js"],"names":["Shape","require","exports","getAllShapes","req","res","find","shapes","status","json","message","getShapeById","id","params","findById","shape","createShape","body","type","coordinates","newShape","save","updateShape","deleteShape","remove"],"mappings":"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","sourcesContent":["// server/controllers/shapeController.js\r\nconst Shape = require('../models/Shape');\r\n\r\nexports.getAllShapes = async (req, res) => {\r\n  try {\r\n    const shapes = await Shape.find();\r\n    res.status(200).json(shapes);\r\n  } catch (error) {\r\n    res.status(500).json({ message: error.message });\r\n  }\r\n};\r\n\r\nexports.getShapeById = async (req, res) => {\r\n  const { id } = req.params;\r\n\r\n  try {\r\n    const shape = await Shape.findById(id);\r\n    if (!shape) {\r\n      return res.status(404).json({ message: 'Shape not found' });\r\n    }\r\n    res.status(200).json(shape);\r\n  } catch (error) {\r\n    res.status(500).json({ message: error.message });\r\n  }\r\n};\r\n\r\nexports.createShape = async (req, res) => {\r\n  const { type, coordinates } = req.body;\r\n\r\n  try {\r\n    const newShape = new Shape({ type, coordinates });\r\n    await newShape.save();\r\n    res.status(201).json({ message: 'Shape created successfully', shape: newShape });\r\n  } catch (error) {\r\n    res.status(500).json({ message: error.message });\r\n  }\r\n};\r\n\r\nexports.updateShape = async (req, res) => {\r\n  const { id } = req.params;\r\n  const { type, coordinates } = req.body;\r\n\r\n  try {\r\n    const shape = await Shape.findById(id);\r\n    if (!shape) {\r\n      return res.status(404).json({ message: 'Shape not found' });\r\n    }\r\n    \r\n    shape.type = type;\r\n    shape.coordinates = coordinates;\r\n\r\n    await shape.save();\r\n    res.status(200).json({ message: 'Shape updated successfully', shape });\r\n  } catch (error) {\r\n    res.status(500).json({ message: error.message });\r\n  }\r\n};\r\n\r\nexports.deleteShape = async (req, res) => {\r\n  const { id } = req.params;\r\n\r\n  try {\r\n    const shape = await Shape.findById(id);\r\n    if (!shape) {\r\n      return res.status(404).json({ message: 'Shape not found' });\r\n    }\r\n\r\n    await shape.remove();\r\n    res.status(200).json({ message: 'Shape deleted successfully' });\r\n  } catch (error) {\r\n    res.status(500).json({ message: error.message });\r\n  }\r\n};\r\n"],"file":"shapeController.dev.js"}