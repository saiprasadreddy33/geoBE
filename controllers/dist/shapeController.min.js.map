{"version":3,"sources":["shapeController.js"],"names":["Shape","require","exports","req","res","shapes","regeneratorRuntime","async","_context","prev","next","awrap","find","getAllShapes","sent","status","json","t0","message","stop","getShapeById","id","shape","_context2","params","findById","abrupt","createShape","_req$body","type","coordinates","newShape","_context3","body","save","updateShape","_req$body2","_context4","deleteShape","_context5"],"mappings":"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","file":"shapeController.min.js","sourcesContent":["// server/controllers/shapeController.js\r\nconst Shape = require('../models/Shape');\r\n\r\nexports.getAllShapes = async (req, res) => {\r\n  try {\r\n    const shapes = await Shape.find();\r\n    res.status(200).json(shapes);\r\n  } catch (error) {\r\n    res.status(500).json({ message: error.message });\r\n  }\r\n};\r\n\r\nexports.getShapeById = async (req, res) => {\r\n  const { id } = req.params;\r\n\r\n  try {\r\n    const shape = await Shape.findById(id);\r\n    if (!shape) {\r\n      return res.status(404).json({ message: 'Shape not found' });\r\n    }\r\n    res.status(200).json(shape);\r\n  } catch (error) {\r\n    res.status(500).json({ message: error.message });\r\n  }\r\n};\r\n\r\nexports.createShape = async (req, res) => {\r\n  const { type, coordinates } = req.body;\r\n\r\n  try {\r\n    const newShape = new Shape({ type, coordinates });\r\n    await newShape.save();\r\n    res.status(201).json({ message: 'Shape created successfully', shape: newShape });\r\n  } catch (error) {\r\n    res.status(500).json({ message: error.message });\r\n  }\r\n};\r\n\r\nexports.updateShape = async (req, res) => {\r\n  const { id } = req.params;\r\n  const { type, coordinates } = req.body;\r\n\r\n  try {\r\n    const shape = await Shape.findById(id);\r\n    if (!shape) {\r\n      return res.status(404).json({ message: 'Shape not found' });\r\n    }\r\n    \r\n    shape.type = type;\r\n    shape.coordinates = coordinates;\r\n\r\n    await shape.save();\r\n    res.status(200).json({ message: 'Shape updated successfully', shape });\r\n  } catch (error) {\r\n    res.status(500).json({ message: error.message });\r\n  }\r\n};\r\n\r\nexports.deleteShape = async (req, res) => {\r\n  const { id } = req.params;\r\n\r\n  try {\r\n    const shape = await Shape.findById(id);\r\n    if (!shape) {\r\n      return res.status(404).json({ message: 'Shape not found' });\r\n    }\r\n\r\n    await shape.remove();\r\n    res.status(200).json({ message: 'Shape deleted successfully' });\r\n  } catch (error) {\r\n    res.status(500).json({ message: error.message });\r\n  }\r\n};\r\n"]}