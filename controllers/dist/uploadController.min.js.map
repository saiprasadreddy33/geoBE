{"version":3,"sources":["uploadController.js"],"names":["path","require","exports","uploadFile","req","res","file","uploadPath","regeneratorRuntime","async","_context","prev","next","Object","keys","abrupt","status","json","message","files","join","__dirname","name","awrap","mv","filePath","t0","console","error","stop"],"mappings":"aACA,IAAMA,KAAOC,QAAQ,QAArBC,QAAUC,WAAW,SAArBC,EAAAC,GAAqB,IAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GAAAF,EAAAC,KAAA,EAEbR,EAAAA,OAAa,IAAAU,OAAAC,KAAAV,EAAOA,OAAKC,OAFZ,CAAAK,EAAAE,KAAA,EAAA,MAAA,OAAAF,EAAAK,OAAA,SAEAV,EAAAW,OAAA,KAAAC,KAAA,CAAAC,QAAA,4BAFA,KAAA,EAAA,OAEAZ,EAAAF,EAAAe,MAAAb,KAAAC,EAAAP,KAAAoB,KAAAC,UAAA,aAAAf,EAAAgB,MAFAZ,EAAAE,KAAA,EAAAJ,mBAAAe,MAEAjB,EAAAkB,GAEZpB,IAJY,KAAA,EAEAC,EAAAW,OAAA,KAAAC,KAAA,CAAAC,QAAA,6BAAAO,SAAAlB,IAFAG,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAgB,GAAAhB,EAAA,MAAA,GAEAiB,QAAAC,MAAA,wBAAAlB,EAAAgB,IAGeR,EAAAA,OAAAA,KAAOD,KAAE,CAAAC,QAAA,qBAAAU,MAAAlB,EAAAgB,GAAAR,UALxB,KAAA,GAAA,IAAA,MAAA,OAAAR,EAAAmB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"uploadController.min.js","sourcesContent":["// server/controllers/uploadController.js\r\nconst path = require('path');\r\n\r\nexports.uploadFile = async (req, res) => {\r\n  try {\r\n    if (!req.files || Object.keys(req.files).length === 0) {\r\n      return res.status(400).json({ message: 'No files were uploaded' });\r\n    }\r\n\r\n    const { file } = req.files;\r\n    const uploadPath = path.join(__dirname, '../uploads', file.name); // Define upload path\r\n\r\n    // Move the uploaded file to the defined path\r\n    await file.mv(uploadPath);\r\n\r\n    // Respond with success message and file path\r\n    res.status(200).json({ message: 'File uploaded successfully', filePath: uploadPath });\r\n  } catch (error) {\r\n    console.error('Error uploading file:', error);\r\n    res.status(500).json({ message: 'File upload failed', error: error.message });\r\n  }\r\n};\r\n"]}